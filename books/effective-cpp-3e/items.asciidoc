= Items
:toc:

== Chapter 1. Accustoming Yourself to C++

=== Item 1. View C++ as a federation of languages

C++ is a multiparadigm programming language, one supporting a combination of procedural, object-oriented, functional, generic, and metaprogramming features.

Four sublanguages:

* C
* Object-Oriented C++
* Template C++
* The STL

Effective programming requires that we change strategy when we switch from one sublanguage to another. For example, pass-by-value is generally more efficient than pass-by-reference for built-in (C-like) types, but when you move to OOP C++, the existence of user-defined constructors and destructors means that pass-by-reference is more efficient. When we across into the STL, because iterators and function objects are modeled on pointers in C, the pass-by-value rule applies again.
